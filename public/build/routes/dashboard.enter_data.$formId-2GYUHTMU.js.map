{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.enter_data.$formId.tsx", "../../../app/widgets/field.tsx", "../../../app/widgets/single_group.tsx", "../../../app/widgets/multy_group.tsx", "../../../app/widgets/rec_navigator.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.enter_data.$formId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.enter_data.$formId.tsx\");\n  import.meta.hot.lastModified = \"1709004140557.6475\";\n}\n// REMIX HMR END\n\nimport MaterialTailwind from \"@material-tailwind/react\";\nconst {\n  Spinner,\n  Alert,\n  Dialog,\n  Card,\n  CardBody,\n  CardFooter\n} = MaterialTailwind;\nimport { Prisma } from \"@prisma/client\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useFetcher, useLoaderData, useLocation, useNavigate, useNavigation, useOutletContext, useSubmit } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport api from '~/api';\nimport CustomButton from \"~/ui/elements/custom_button\";\nimport SingleGroup from \"~/widgets/single_group\";\nimport MultyGroup from \"~/widgets/multy_group\";\nimport RecNavigator from \"~/widgets/rec_navigator\";\nexport async function loader({\n  request,\n  params\n}) {\n  const url = new URL(request.url);\n  const docId = url.searchParams.get(\"docId\");\n  const state = url.searchParams.get(\"state\");\n  let inputForm;\n  let doc;\n  inputForm = await api.db.getInputForm(Number(params.formId));\n  doc = await api.doc.getDoc(docId ? Number(docId) : null, inputForm);\n  return json({\n    inputForm,\n    doc,\n    state\n  });\n}\nexport async function action({\n  request\n}) {\n  let ok = false;\n  let errors = '';\n  let docs = null;\n  let deletedDocId = null;\n  const formData = await request.formData();\n  const {\n    _action,\n    _user,\n    _inputFormId,\n    _id,\n    ...values\n  } = Object.fromEntries(formData);\n  try {\n    const inputForm = await api.db.getInputForm(Number(_inputFormId));\n    if (_action === 'openForCreate') {\n      return redirect(`/dashboard/enter_data/${_inputFormId}?state=edit`);\n    } else if (_action === 'openForEdit') {\n      return redirect(`/dashboard/enter_data/${_inputFormId}?state=edit&docId=${_id}`);\n    } else if (_action === 'openForSearch') {\n      return redirect(`/dashboard/enter_data/${_inputFormId}?state=search`);\n    } else if (_action === 'saveDocument') {\n      let jsonData = JSON.parse(String(values.json));\n      if (_id) {\n        await api.doc.updateDoc(Number(_user), inputForm, jsonData);\n        return redirect(`/dashboard/enter_data/${_inputFormId}?docId=${_id}`);\n      } else {\n        await api.doc.createDoc(Number(_user), inputForm, jsonData);\n        return redirect(`/dashboard/enter_data/${_inputFormId}?`);\n      }\n    } else if (_action === 'findDocument') {\n      let jsonData = JSON.parse(String(values.json));\n      const results = await api.doc.findDoc(inputForm, jsonData);\n      if (results.length > 100) {\n        errors = \"Find records more 100\";\n      } else {\n        docs = {\n          formId: inputForm.id,\n          ids: results.map(item => item.id)\n        };\n        ok = true;\n      }\n    } else if (_action === 'cancelUpdate') {\n      if (_id) {\n        return redirect(`/dashboard/enter_data/${_inputFormId}?docId=${_id}`);\n      } else {\n        return redirect(`/dashboard/enter_data/${_inputFormId}?`);\n      }\n    } else if (_action === 'deleteDocument') {\n      if (_id) {\n        await api.doc.deleteDoc(Number(_id));\n        deletedDocId = Number(_id);\n        ok = true;\n      }\n    }\n  } catch (e) {\n    if (e instanceof Prisma.PrismaClientKnownRequestError) {\n      errors = e.message;\n    } else {\n      throw e;\n    }\n  }\n  return json({\n    errors,\n    docs,\n    deletedDocId,\n    ok\n  });\n}\nexport default function EnterData() {\n  _s();\n  const {\n    dictionaries,\n    docs,\n    setDocs,\n    current,\n    setCurrent\n  } = useOutletContext();\n  const {\n    inputForm,\n    doc,\n    state\n  } = useLoaderData();\n  const [document, setDocument] = useState(doc);\n  const location = useLocation();\n  const navigation = useNavigation();\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n  const userId = 19;\n  const [open, setOpen] = useState(false);\n  const data = useActionData();\n  const [showFind, setShowFind] = useState(false);\n  const fetcher = useFetcher();\n  const isDeleting = fetcher.state !== \"idle\";\n  const submit = useSubmit();\n  useEffect(() => {\n    setDocument(doc);\n    console.log(\"useEffect\");\n  }, [doc]);\n  const handleSave = () => {\n    submit({\n      _action: \"saveDocument\",\n      _user: userId ? userId : '',\n      _inputFormId: inputForm.id ? inputForm.id : '',\n      _id: document.id ? document.id : '',\n      json: JSON.stringify(document)\n    }, {\n      method: \"post\"\n    });\n  };\n  const handleFind = () => {\n    submit({\n      _action: \"findDocument\",\n      _user: userId ? userId : '',\n      _inputFormId: inputForm.id ? inputForm.id : '',\n      _id: document.id ? document.id : '',\n      json: JSON.stringify(document)\n    }, {\n      method: \"post\"\n    });\n  };\n  const handleOpenInputForm = () => {\n    setShowFind(false);\n    if (docs && docs.ids?.length) {\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[0]}`);\n    } else {\n      navigate(`/dashboard/enter_data/${docs.formId}?state=search`);\n    }\n  };\n  const handleDelete = async event => {\n    const response = confirm(\"Please confirm you want to delete this record.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  useEffect(() => {\n    if (data?.errors) {\n      setOpen(true);\n    }\n    if (data?.docs && data?.ok) {\n      setDocs(data.docs);\n      setShowFind(true);\n    }\n    if (navigation.state === \"idle\" && data?.ok) {\n      formRef.current?.reset();\n    }\n    if (data?.deletedDocId && data?.ok) {\n      setDocs(prev => ({\n        formId: prev.formId,\n        ids: prev.ids?.filter(item => item !== data.deletedDocId)\n      }));\n    }\n  }, [data]);\n  return <div className=\"container mx-auto flex flex-col gap-3 h-screen pb-5\">\n            <Dialog placeholder=\"\" size=\"sm\" open={showFind} handler={() => handleOpenInputForm()} className=\"bg-transparent shadow-none\">\n                <Card className=\"mx-auto w-full\" placeholder=\"\">\n                    <CardBody className=\"flex flex-col gap-4 overflow-auto\" placeholder=\"\">\n                        <div className=\"text-bold p-1\">Find: {docs.ids?.length}</div>\n                    </CardBody>\n                    <CardFooter className=\"pt-0 flex flex-row gap-3\" placeholder=\"\">\n                        <CustomButton className=\"bg-green-500 hover:shadow-green-100\" onClick={() => handleOpenInputForm()}>\n                            OK\n                        </CustomButton>\n                    </CardFooter>\n                </Card>\n            </Dialog>\n            <h1 className=\"self-center text-amber-700 text-3xl font-bold mt-4\">{inputForm?.title}</h1>\n            <Alert className=\"text-white bg-red-500\" open={open} onClose={() => setOpen(false)}>\n                {data?.errors ? data.errors : \"\"}\n            </Alert>\n            <RecNavigator docs={docs} current={current} setCurrent={setCurrent} />\n            <div className=\"flex items-center gap-3\">\n                {!['edit', 'search'].includes(String(state)) ? <Form method=\"post\">\n                        <input type=\"hidden\" name=\"_user\" value={userId} />\n                        <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                        <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"openForCreate\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                            </svg>\n                            Create\n                        </CustomButton>\n                    </Form> : null}\n                {!['edit', 'search'].includes(String(state)) ? <Form method=\"post\">\n                        <input type=\"hidden\" name=\"_user\" value={userId} />\n                        <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                        <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"openForSearch\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n                            </svg>\n                            Search\n                        </CustomButton>\n                    </Form> : null}\n                {state === \"search\" ? <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\"\n      // form=\"documentForm\"\n      // type=\"submit\"\n      // name=\"_action\"\n      // value=\"findDocument\"\n      onClick={() => handleFind()}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n                        </svg>\n                        Find\n                    </CustomButton> : null}\n                {doc.id && state !== 'edit' ? <Form method=\"post\">\n                        <input type=\"hidden\" name=\"_user\" value={userId} />\n                        <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                        <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n                        <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"openForEdit\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\" />\n                            </svg>\n                            Edit\n                        </CustomButton>\n                    </Form> : null}\n                {state === 'edit' ? <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\"\n      // form=\"documentForm\"\n      // type=\"submit\"\n      // name=\"_action\"\n      // value=\"saveDocument\"\n      onClick={() => handleSave()}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 5.25 7.5 7.5 7.5-7.5m-15 6 7.5 7.5 7.5-7.5\" />\n                        </svg>\n                        Save\n                    </CustomButton> : null}\n                {state === 'edit' || state === 'search' ? <Form method=\"post\">\n                        <input type=\"hidden\" name=\"_user\" value={userId} />\n                        <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                        <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n                        <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" type=\"submit\" name=\"_action\" value=\"cancelUpdate\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                            </svg>\n\n                            Cancel\n                        </CustomButton>\n                    </Form> : null}\n                {doc.id && state !== 'edit' ? <Form method=\"post\">\n                        <input type=\"hidden\" name=\"_user\" value={userId} />\n                        <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                        <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n                        <CustomButton className=\"bg-red-500 hover:shadow-red-100\" disabled={isDeleting} onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteDocument\">\n                            {isDeleting ? <>\n                                    <Spinner className=\"w-4 h-4\" />\n                                    Deleting...\n                                </> : <>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                                    </svg>\n                                    Delete\n                                </>}\n                        </CustomButton>\n                    </Form> : null}\n            </div>\n            <div className=\"bg-white border p-1 shadow-blue-gray-700 shadow-md overflow-auto\">\n                <Form key={location.key} id=\"documentForm\" method=\"post\" ref={formRef}>\n                    <input type=\"hidden\" name=\"_user\" value={userId} />\n                    <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n                    <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n                    {inputForm?.groups && inputForm.groups.map(group => <div key={group.id} className=\"mb-2\">\n                            <h2 className=\"col-span-3 bg-orange-700 text-white font-bold text-sm p-1 pl-4\">{group.title}</h2>\n                            {!group.isMulty ? <SingleGroup state={state} dictionaries={dictionaries} group={group} doc={document} setDoc={setDocument} /> : <MultyGroup state={state} dictionaries={dictionaries} group={group} doc={document} setDoc={setDocument} />}\n                        </div>)}\n                </Form>\n            </div>\n        </div>;\n}\n_s(EnterData, \"boAPRmDy6wosEk/wQ00CNkdLTEI=\", false, function () {\n  return [useOutletContext, useLoaderData, useLocation, useNavigation, useNavigate, useActionData, useFetcher, useSubmit];\n});\n_c = EnterData;\nvar _c;\n$RefreshReg$(_c, \"EnterData\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/widgets/field.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/widgets/field.tsx\");\n  import.meta.hot.lastModified = \"1708937813547.5159\";\n}\n// REMIX HMR END\n\nimport CustomInput from \"~/ui/elements/custom_input\";\nimport CustomSelect from \"~/ui/elements/custom_select\";\nexport default function Field({\n  state,\n  dictionaries,\n  doc,\n  setDoc,\n  recordIndex,\n  fld\n}) {\n  const tableName = `tbl_${fld.groupId}`;\n  const fieldName = `f${fld.id}`;\n  let val = doc[tableName][recordIndex][fieldName] ? doc[tableName][recordIndex][fieldName] : '';\n  const cls = `col-span-${fld.colSpan} col-start-${fld.colStart}`;\n  const handleChange = e => {\n    let d = {\n      ...doc\n    };\n    d[tableName][recordIndex][fieldName] = e.target.value;\n    setDoc(d);\n  };\n  switch (fld.fieldType) {\n    case \"TEXT\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"text\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"CYRILLIC\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"text\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"INTEGER\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"number\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"NUMERIC\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"number\" step=\"0.01\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"DICT\":\n      const dic = dictionaries.find(item => item.id === fld.dicId);\n      return <CustomSelect key={fld.id} className={cls} id={fieldName} title={fld.title} name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))}>\n                    <option>-</option>\n                    {['create', 'edit', 'search', 'find'].includes(String(state)) ? dic?.data_edit.map(item => <option key={item.id} value={item.id}>{item.title}</option>) : dic?.data_browse.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\n                </CustomSelect>;\n    case \"DATE\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"date\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"TIME\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fld.title} type=\"time\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    // case \"FILE\":\n    //     return (\n    //         <CustomInput\n    //             key={fld.id}\n    //             className={cls}\n    //             id={fieldName}\n    //             title={fld.title}\n    //             type=\"file\"\n    //             name={fieldName}\n    //             defaultValue={defVal}\n    //             required={fld.isRequire && state === 'edit'}\n    //             disabled={!fld.isEnable || !(['create', 'edit', 'search', 'find'].includes(String(state)))}\n    //             size={fld.len ? fld.len : 30}\n    //             maxLength={fld.len ? fld.len : 30}\n    //         />\n    //     )\n  }\n}\n_c = Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/widgets/single_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/widgets/single_group.tsx\");\n  import.meta.hot.lastModified = \"1708936355877.7522\";\n}\n// REMIX HMR END\n\nimport Field from \"./field\";\nexport default function SingleGroup({\n  state,\n  dictionaries,\n  group,\n  doc,\n  setDoc\n}) {\n  return <div className=\"border p-1 grid grid-cols-3 gap-1\">\n            {group?.fields && group.fields.map(fld => <Field key={fld.id} state={state} dictionaries={dictionaries} recordIndex={0} doc={doc} setDoc={setDoc} fld={fld} />)}\n        </div>;\n}\n_c = SingleGroup;\nvar _c;\n$RefreshReg$(_c, \"SingleGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/widgets/multy_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/widgets/multy_group.tsx\");\n  import.meta.hot.lastModified = \"1708939643111.3315\";\n}\n// REMIX HMR END\n\nimport Field from \"./field\";\nimport CustomButton from \"~/ui/elements/custom_button\";\nexport default function MultyGroup({\n  state,\n  dictionaries,\n  group,\n  doc,\n  setDoc\n}) {\n  const handleAdd = e => {\n    e.preventDefault();\n    let d = {\n      ...doc\n    };\n    const tbl = `tbl_${group.id}`;\n    let fields = {\n      id: null,\n      sid: null,\n      lst: 0\n    };\n    for (const field of group.fields) {\n      fields[`f${field.id}`] = '';\n    }\n    d[tbl].push(fields);\n    setDoc(d);\n  };\n  const handleDelete = (e, recordIndex) => {\n    e.preventDefault();\n    const response = confirm(\"Please confirm you want to delete this record.\");\n    if (response) {\n      let d = {\n        ...doc\n      };\n      const tbl = `tbl_${group.id}`;\n      d[tbl].splice([recordIndex], 1);\n      setDoc(d);\n    }\n  };\n  return <div className=\"border p-1\">\n            <div className=\"flex justify-end p-1\">\n                {state === 'edit' ? <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" onClick={handleAdd}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                        </svg>\n                        Add\n                    </CustomButton> : null}\n            </div>\n            <table className=\"border border-blue-gray-700\">\n                <thead className=\"bg-blue-gray-400 text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-700\">#</th>\n                        {group?.fields && group.fields.map(fld => <th key={fld.id} className=\"p-1 text-sm border border-blue-gray-700\">\n                                {fld.title}\n                            </th>)}\n                        <th className=\"p-1 text-sm border border-blue-gray-700\">#</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {doc[`tbl_${group.id}`].map((record, index) => <tr key={index}>\n                            <td className=\"p-1 text-sm border border-blue-gray-700\">{index + 1}</td>\n                            {group?.fields && group.fields.map(fld => <td key={fld.id} className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <Field state={state} dictionaries={dictionaries} recordIndex={index} doc={doc} setDoc={setDoc} fld={fld} />\n                                </td>)}\n                            {state === \"edit\" && index !== 0 ? <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <CustomButton className=\"bg-red-500 hover:shadow-red-100\" onClick={e => handleDelete(e, index)}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                                        </svg>\n                                        Delete\n                                    </CustomButton>\n                                </td> : null}\n                        </tr>)}\n\n                </tbody>\n            </table>\n        </div>;\n}\n_c = MultyGroup;\nvar _c;\n$RefreshReg$(_c, \"MultyGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/widgets/rec_navigator.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/widgets/rec_navigator.tsx\");\n  import.meta.hot.lastModified = \"1708944139413.0334\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport { useState } from \"react\";\nexport default function RecNavigator({\n  docs,\n  current,\n  setCurrent\n}) {\n  _s();\n  const [val, setVal] = useState(current);\n  const navigate = useNavigate();\n  const handleFirst = () => {\n    setVal(0);\n    setCurrent(0);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[0]}`);\n  };\n  const handlePrev = () => {\n    if (current > 0) {\n      --current;\n      setVal(current);\n      setCurrent(current);\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[current]}`);\n    }\n  };\n  const handleNext = () => {\n    const lastIndex = docs.ids.length - 1;\n    if (current < lastIndex) {\n      ++current;\n      setVal(current);\n      setCurrent(current);\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[current]}`);\n    }\n  };\n  const handleLast = () => {\n    const lastIndex = docs.ids.length - 1;\n    setVal(lastIndex);\n    setCurrent(lastIndex);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[lastIndex]}`);\n  };\n  const handleSeek = val => {\n    if (val < 0) {\n      val = 0;\n    }\n    if (val > docs.ids.length - 1) {\n      val = docs.ids.length - 1;\n    }\n    setVal(val);\n    setCurrent(val);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[val]}`);\n  };\n  return <div>\n            {docs && docs.ids ? <div className=\"flex gap-1 justify-end items-center text-xs\">\n                    <p className=\"text-blue-gray-600 font-bold\">\n                        {current + 1} / {docs.ids.length}\n                    </p>\n                    <input className=\"p-1 text-blue-gray-600 focus:outline-0 w-20\" type=\"number\" max={docs.ids.length} min={1} value={val + 1} onChange={e => setVal(Number(e.target.value) - 1)} />\n                    <button className=\"w-20 text-center border bg-blue-gray-500 p-1 font-bold text-white rounded\" onClick={() => handleSeek(val)}>\n                        Seek\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleFirst()}>\n                        &lt;&lt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handlePrev()}>\n                        &lt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleNext()}>\n                        &gt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleLast()}>\n                        &gt;&gt;\n                    </button>\n                </div> : null}\n        </div>;\n}\n_s(RecNavigator, \"bRS7YemhOiQ/UMD2eufTNCWGMz4=\", false, function () {\n  return [useNavigate];\n});\n_c = RecNavigator;\nvar _c;\n$RefreshReg$(_c, \"RecNavigator\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_react", "import_jsx_dev_runtime", "val", "_c", "import_jsx_dev_runtime", "_s", "MaterialTailwind", "_s", "_c"]
}
