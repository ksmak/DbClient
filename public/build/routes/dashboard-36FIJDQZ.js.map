{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/routes/dashboard.tsx\"\n);\nimport.meta.hot.lastModified = \"1708692280288.233\";\n}\n// REMIX HMR END\n\nimport { InputForm, SearchForm } from \"@prisma/client\";\nimport { Link, Outlet, json, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { Dispatch, SetStateAction, useState } from \"react\";\nimport api from \"~/api\";\n\nexport type ContexType = {\n    dictionaries?: any,\n    inputForms?: any,\n    searchForms?: any,\n    docs: { formId?: number, ids?: number[] },\n    setDocs: Dispatch<SetStateAction<{ formId?: number, ids?: number[] }>>,\n}\n\nexport async function loader() {\n    const dictionaries = await api.db.getDictionaries()\n    const inputForms = await api.db.getInputForms()\n    const searchForms = await api.db.getSearchForms()\n    return json({\n        dictionaries,\n        inputForms,\n        searchForms\n    })\n}\n\nexport default function dashboard() {\n    const [docs, setDocs] = useState<{ formId?: number, ids?: number[] }>({})\n    const data = useLoaderData<typeof loader>()\n    const context: ContexType = {\n        ...data,\n        docs,\n        setDocs,\n    }\n\n\n    return (\n        <div className=\"container mx-auto flex flex-col gap-3 h-screen pb-5\">\n\n            <h1 className=\"text-3xl text-amber-700 font-bold\">DbClient</h1>\n            <p>{docs.ids?.map((id) => (<Link className=\"text-blue-500 underline hover:cursor-pointer p-1\" key={id} to={`/dashboard/enter_data/${docs.formId}?docId=${id}`}>{id}</Link>))}</p>\n            <ul className=\"text-blue-500 text-bold\">\n                <li>\n                    Enter Data\n                    <ul className=\"ml-4\">\n                        {data.inputForms.map((item: InputForm) =>\n                            <li key={item.id}><Link to={`/dashboard/enter_data/${item.id}`}>\n                                Form: {item.title}\n                            </Link></li>)}\n                    </ul>\n                </li>\n                <li>\n                    Search Data\n                    <ul className=\"ml-4\">\n                        {data.searchForms.map((item: SearchForm) =>\n                            <li key={item.id}><Link to={`/dashboard/search_data/${item.id}`}>\n                                Form: {item.title}\n                            </Link></li>)}\n                    </ul>\n                </li>\n                <li>\n                    Service\n                    <ul className=\"ml-4\">\n                        <li><Link to=\"db_struct\">Db Structure</Link></li>\n                        <li><Link to=\"users\">Users</Link></li>\n                    </ul>\n                </li>\n                <li>Help</li>\n            </ul>\n            <Outlet context={context} />\n        </div>\n    )\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAaA,IAAAA,gBAAmD;AAmCvC;AA9CZ,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AA2Be,SAAR,YAA6B;AAChC,QAAM,CAAC,MAAM,OAAO,QAAI,wBAA8C,CAAC,CAAC;AACxE,QAAM,OAAO,cAA6B;AAC1C,QAAM,UAAsB;AAAA,IACxB,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AAGA,SACI,mDAAC,SAAI,WAAU,uDAEX;AAAA,uDAAC,QAAG,WAAU,qCAAoC,wBAAlD;AAAA;AAAA;AAAA;AAAA,WAA0D;AAAA,IAC1D,mDAAC,OAAG,eAAK,KAAK,IAAI,CAAC,OAAQ,mDAAC,QAAK,WAAU,oDAA4D,IAAI,yBAAyB,KAAK,gBAAgB,MAAO,gBAA7D,IAAxE;AAAA;AAAA;AAAA;AAAA,WAAwI,CAAQ,KAA3K;AAAA;AAAA;AAAA;AAAA,WAA6K;AAAA,IAC7K,mDAAC,QAAG,WAAU,2BACV;AAAA,yDAAC,QAAG;AAAA;AAAA,QAEA,mDAAC,QAAG,WAAU,QACT,eAAK,WAAW,IAAI,CAAC,SAClB,mDAAC,QAAiB,6DAAC,QAAK,IAAI,yBAAyB,KAAK,MAAM;AAAA;AAAA,UACrD,KAAK;AAAA,aADE;AAAA;AAAA;AAAA;AAAA,eAElB,KAFS,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,eAEO,CAAK,KAJpB;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAPJ;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,mDAAC,QAAG;AAAA;AAAA,QAEA,mDAAC,QAAG,WAAU,QACT,eAAK,YAAY,IAAI,CAAC,SACnB,mDAAC,QAAiB,6DAAC,QAAK,IAAI,0BAA0B,KAAK,MAAM;AAAA;AAAA,UACtD,KAAK;AAAA,aADE;AAAA;AAAA;AAAA;AAAA,eAElB,KAFS,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,eAEO,CAAK,KAJpB;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAPJ;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,mDAAC,QAAG;AAAA;AAAA,QAEA,mDAAC,QAAG,WAAU,QACV;AAAA,6DAAC,QAAG,6DAAC,QAAK,IAAG,aAAY,4BAArB;AAAA;AAAA;AAAA;AAAA,iBAAiC,KAArC;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,mDAAC,QAAG,6DAAC,QAAK,IAAG,SAAQ,qBAAjB;AAAA;AAAA;AAAA;AAAA,iBAAsB,KAA1B;AAAA;AAAA;AAAA;AAAA,iBAAiC;AAAA,aAFrC;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,WALJ;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,QAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,SA1BZ;AAAA;AAAA;AAAA;AAAA,WA2BA;AAAA,IACA,mDAAC,UAAO,WAAR;AAAA;AAAA;AAAA;AAAA,WAA0B;AAAA,OAhC9B;AAAA;AAAA;AAAA;AAAA,SAiCA;AAER;",
  "names": ["import_react"]
}
