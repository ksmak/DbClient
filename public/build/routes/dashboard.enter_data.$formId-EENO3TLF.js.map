{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.enter_data.$formId.tsx", "../../../app/components/UI/widgets/enter_data/view.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_cancel.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_create.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_delete.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_edit.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_find.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_save.tsx", "../../../app/components/UI/widgets/enter_data/buttons/btn_search.tsx", "../../../app/components/UI/widgets/enter_data/buttons/buttons.tsx", "../../../app/components/UI/widgets/enter_data/dlg_find_result.tsx", "../../../app/components/UI/widgets/enter_data/rec_navigator.tsx", "../../../app/components/UI/widgets/enter_data/edit_form/field.tsx", "../../../app/components/UI/widgets/enter_data/edit_form/single_group.tsx", "../../../app/components/UI/widgets/enter_data/edit_form/multy_group.tsx", "../../../app/components/UI/widgets/enter_data/edit_form/edit_form.tsx", "../../../app/components/UI/widgets/enter_data/dlg_multy_group.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.enter_data.$formId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.enter_data.$formId.tsx\");\n  import.meta.hot.lastModified = \"1710333988165.5857\";\n}\n// REMIX HMR END\n\nimport { Prisma } from \"@prisma/client\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, useLoaderData, useNavigation, useOutletContext } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport api from '~/components/api';\nimport EnterDataView from \"~/components/UI/widgets/enter_data/view\";\nexport async function loader({\n  request,\n  params\n}) {\n  const url = new URL(request.url);\n  const state = url.searchParams.get(\"state\");\n  const docId = url.searchParams.get(\"docId\");\n  const groupId = url.searchParams.get(\"groupId\");\n  let inputForm = await api.db.getInputForm(Number(params.formId));\n  let doc = await api.doc.getDoc(docId ? Number(docId) : null, inputForm);\n  let group = null;\n  if (groupId) {\n    group = await api.db.getGroup(Number(groupId));\n  }\n  return json({\n    inputForm,\n    doc,\n    state,\n    group\n  });\n}\nexport async function action({\n  request\n}) {\n  let ok = false;\n  let errors = '';\n  let docs = null;\n  let deletedDocId = null;\n  const formData = await request.formData();\n  const {\n    _action,\n    _user,\n    _inputFormId,\n    _id,\n    ...values\n  } = Object.fromEntries(formData);\n  switch (_action) {\n    case 'saveDocument':\n      {\n        try {\n          let inputForm = await api.db.getInputForm(Number(_inputFormId));\n          let jsonData = JSON.parse(String(values.json));\n          if (_id) {\n            await api.doc.updateDoc(Number(_user), inputForm, jsonData);\n            return redirect(`/dashboard/enter_data/${_inputFormId}?docId=${_id}`);\n          } else {\n            await api.doc.createDoc(Number(_user), inputForm, jsonData);\n            return redirect(`/dashboard/enter_data/${_inputFormId}`);\n          }\n        } catch (e) {\n          if (e instanceof Prisma.PrismaClientKnownRequestError) {\n            errors = e.message;\n          } else {\n            throw e;\n          }\n        }\n        break;\n      }\n    case 'findDocument':\n      {\n        try {\n          let inputForm = await api.db.getInputForm(Number(_inputFormId));\n          let jsonData = JSON.parse(String(values.json));\n          const results = await api.doc.findDoc(inputForm, jsonData);\n          if (results.length > 100) {\n            errors = \"Find records more 100\";\n          } else {\n            docs = {\n              formId: inputForm.id,\n              ids: results.map(item => item.id)\n            };\n            ok = true;\n          }\n        } catch (e) {\n          if (e instanceof Prisma.PrismaClientKnownRequestError) {\n            errors = e.message;\n          } else {\n            throw e;\n          }\n        }\n        break;\n      }\n    case 'deleteDocument':\n      {\n        try {\n          if (_id) {\n            await api.doc.deleteDoc(Number(_id));\n            deletedDocId = Number(_id);\n            ok = true;\n          }\n        } catch (e) {\n          if (e instanceof Prisma.PrismaClientKnownRequestError) {\n            errors = e.message;\n          } else {\n            throw e;\n          }\n        }\n        break;\n      }\n  }\n  return json({\n    errors,\n    docs,\n    deletedDocId,\n    ok\n  });\n}\nexport default function EnterData() {\n  _s();\n  const {\n    dictionaries,\n    docs,\n    setDocs,\n    current,\n    setCurrent\n  } = useOutletContext();\n  const {\n    inputForm,\n    doc,\n    state,\n    group\n  } = useLoaderData();\n  const [document, setDocument] = useState(doc);\n  const navigation = useNavigation();\n  const formRef = useRef(null);\n  const userId = 19;\n  const data = useActionData();\n  const [showFind, setShowFind] = useState(false);\n  useEffect(() => {\n    setDocument(doc);\n  }, [doc]);\n  useEffect(() => {\n    if (data?.docs && data?.ok) {\n      setDocs(data.docs);\n      setShowFind(true);\n    }\n    if (navigation.state === \"idle\" && data?.ok) {\n      formRef.current?.reset();\n    }\n    if (data?.deletedDocId && data?.ok) {\n      setDocs(prev => ({\n        formId: prev.formId,\n        ids: prev.ids?.filter(item => item !== data.deletedDocId)\n      }));\n    }\n  }, [data]);\n  return <EnterDataView errors={data?.errors} open={showFind} setOpen={setShowFind} docs={docs} userId={userId} current={current} setCurrent={setCurrent} formRef={formRef} inputForm={inputForm} state={state} dictionaries={dictionaries} doc={document} setDoc={setDocument} group={group} />;\n}\n_s(EnterData, \"9qlXiH2cXD4+p033etoAY2sS3B8=\", false, function () {\n  return [useOutletContext, useLoaderData, useNavigation, useActionData];\n});\n_c = EnterData;\nvar _c;\n$RefreshReg$(_c, \"EnterData\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/view.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/view.tsx\");\n  import.meta.hot.lastModified = \"1710322296495.0027\";\n}\n// REMIX HMR END\n\nimport { useEffect, useState } from \"react\";\nimport ErrorMessage from \"../../elements/error_message\";\nimport Buttons from \"./buttons/buttons\";\nimport DialogFindResult from \"./dlg_find_result\";\nimport RecNavigator from \"./rec_navigator\";\nimport Panel from \"../../elements/panel\";\nimport EditForm from \"./edit_form/edit_form\";\nimport DialogMultyGroup from \"./dlg_multy_group\";\nexport default function EnterDataView({\n  errors,\n  open,\n  setOpen,\n  docs,\n  userId,\n  current,\n  setCurrent,\n  formRef,\n  inputForm,\n  state,\n  dictionaries,\n  doc,\n  setDoc,\n  group\n}) {\n  _s();\n  const [openGroup, setOpenGroup] = useState(false);\n  useEffect(() => {\n    if (state === 'edit' && group) {\n      setOpenGroup(true);\n    }\n  }, [group]);\n  return <div className=\"h-[calc(100vh-5rem)] flex flex-col gap-3 pb-5\">\n            <ErrorMessage errors={errors} />\n            <DialogFindResult open={open} setOpen={setOpen} docs={docs} />\n            <DialogMultyGroup state={state} open={openGroup} setOpen={setOpenGroup} group={group} dictionaries={dictionaries} doc={doc} setDoc={setDoc} />\n            <Panel className=\"h-full overflow-auto\">\n                <div className=\"py-2 flex justify-between items-center\">\n                    <Buttons userId={userId} inputFormId={inputForm.id} doc={doc} state={state} />\n                    <RecNavigator docs={docs} current={current} setCurrent={setCurrent} />\n                </div>\n                <EditForm formRef={formRef} userId={userId} inputForm={inputForm} state={state} dictionaries={dictionaries} doc={doc} setDoc={setDoc} />\n            </Panel>\n        </div>;\n}\n_s(EnterDataView, \"xp1DNuc21X6tMBhFpCs0YjqxrnQ=\");\n_c = EnterDataView;\nvar _c;\n$RefreshReg$(_c, \"EnterDataView\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_cancel.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_cancel.tsx\");\n  import.meta.hot.lastModified = \"1710333963814.371\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonCancel({\n  inputFormId,\n  docId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  return <CustomButton outline={true} className=\"hover:shadow-primary_shadow text-primary border-primary\" onClick={() => navigate(`/dashboard/enter_data/${inputFormId}?docId=${docId}`)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n            </svg>\n\n            {t('cancel')}\n        </CustomButton>;\n}\n_s(ButtonCancel, \"1n6r5eWNKhP/dvqdbLCphpT4ddM=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = ButtonCancel;\nvar _c;\n$RefreshReg$(_c, \"ButtonCancel\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_create.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_create.tsx\");\n  import.meta.hot.lastModified = \"1710333022310.8044\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonCreate({\n  inputFormId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  return <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" onClick={() => navigate(`/dashboard/enter_data/${inputFormId}?state=edit`)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n            </svg>\n            {t('create')}\n        </CustomButton>;\n}\n_s(ButtonCreate, \"1n6r5eWNKhP/dvqdbLCphpT4ddM=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = ButtonCreate;\nvar _c;\n$RefreshReg$(_c, \"ButtonCreate\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_delete.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_delete.tsx\");\n  import.meta.hot.lastModified = \"1709721299382.6792\";\n}\n// REMIX HMR END\n\nimport { Form } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonDelete({\n  userId,\n  inputFormId,\n  doc\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleDelete = async event => {\n    const response = confirm(\"Please confirm you want to delete this record.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  };\n  return <Form method=\"post\">\n            <input type=\"hidden\" name=\"_user\" value={userId} />\n            <input type=\"hidden\" name=\"_inputFormId\" value={inputFormId} />\n            <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n            <CustomButton className=\"bg-red-500 hover:shadow-red-100\" onClick={handleDelete} type=\"submit\" name=\"_action\" value=\"deleteDocument\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                </svg>\n                {t('delete')}\n            </CustomButton>\n        </Form>;\n}\n_s(ButtonDelete, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ButtonDelete;\nvar _c;\n$RefreshReg$(_c, \"ButtonDelete\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_edit.tsx\");\n  import.meta.hot.lastModified = \"1710333943178.783\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonEdit({\n  inputFormId,\n  docId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  return <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" onClick={() => navigate(`/dashboard/enter_data/${inputFormId}?state=edit&docId=${docId}`)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\" />\n            </svg>\n            {t('edit')}\n        </CustomButton>;\n}\n_s(ButtonEdit, \"1n6r5eWNKhP/dvqdbLCphpT4ddM=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = ButtonEdit;\nvar _c;\n$RefreshReg$(_c, \"ButtonEdit\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_find.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_find.tsx\");\n  import.meta.hot.lastModified = \"1709721316399.2766\";\n}\n// REMIX HMR END\n\nimport { useTranslation } from \"react-i18next\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useSubmit } from \"@remix-run/react\";\nexport default function ButtonFind({\n  userId,\n  inputFormId,\n  doc\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const submit = useSubmit();\n  const handleFind = () => {\n    submit({\n      _action: \"findDocument\",\n      _user: userId,\n      _inputFormId: inputFormId,\n      _id: doc.id ? doc.id : '',\n      json: JSON.stringify(document)\n    }, {\n      method: \"post\"\n    });\n  };\n  return <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" onClick={() => handleFind()}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n            </svg>\n            {t('find')}\n        </CustomButton>;\n}\n_s(ButtonFind, \"6b9drngkmiq9KhFUfrO+O1zoj50=\", false, function () {\n  return [useTranslation, useSubmit];\n});\n_c = ButtonFind;\nvar _c;\n$RefreshReg$(_c, \"ButtonFind\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_save.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_save.tsx\");\n  import.meta.hot.lastModified = \"1710334324875.705\";\n}\n// REMIX HMR END\n\nimport { useTranslation } from \"react-i18next\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useSubmit } from \"@remix-run/react\";\nexport default function ButtonSave({\n  userId,\n  inputFormId,\n  doc\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const submit = useSubmit();\n  const handleSave = () => {\n    submit({\n      _action: \"saveDocument\",\n      _user: userId ? userId : '',\n      _inputFormId: inputFormId ? inputFormId : '',\n      _id: doc.id ? doc.id : '',\n      json: JSON.stringify(doc)\n    }, {\n      method: \"post\"\n    });\n  };\n  return <CustomButton className=\"bg-blue-gray-500 hover:shadow-blue-gray-100\" onClick={() => handleSave()}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m4.5 5.25 7.5 7.5 7.5-7.5m-15 6 7.5 7.5 7.5-7.5\" />\n            </svg>\n            {t('save')}\n        </CustomButton>;\n}\n_s(ButtonSave, \"6b9drngkmiq9KhFUfrO+O1zoj50=\", false, function () {\n  return [useTranslation, useSubmit];\n});\n_c = ButtonSave;\nvar _c;\n$RefreshReg$(_c, \"ButtonSave\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/btn_search.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/btn_search.tsx\");\n  import.meta.hot.lastModified = \"1710333282591.4026\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nexport default function ButtonSearch({\n  inputFormId\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  return <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" onClick={() => navigate(`/dashboard/enter_data/${inputFormId}?state=search`)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\n            </svg>\n            {t('search')}\n        </CustomButton>;\n}\n_s(ButtonSearch, \"1n6r5eWNKhP/dvqdbLCphpT4ddM=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = ButtonSearch;\nvar _c;\n$RefreshReg$(_c, \"ButtonSearch\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/buttons/buttons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/buttons/buttons.tsx\");\n  import.meta.hot.lastModified = \"1709717049279.9956\";\n}\n// REMIX HMR END\n\nimport ButtonCancel from \"./btn_cancel\";\nimport ButtonCreate from \"./btn_create\";\nimport ButtonDelete from \"./btn_delete\";\nimport ButtonEdit from \"./btn_edit\";\nimport ButtonFind from \"./btn_find\";\nimport ButtonSave from \"./btn_save\";\nimport ButtonSearch from \"./btn_search\";\nexport default function Buttons({\n  userId,\n  inputFormId,\n  state,\n  doc\n}) {\n  return <div className=\"flex items-center gap-3\">\n            {!['edit', 'search'].includes(String(state)) ? <ButtonCreate userId={userId} inputFormId={inputFormId} /> : null}\n            {!['edit', 'search'].includes(String(state)) ? <ButtonSearch userId={userId} inputFormId={inputFormId} /> : null}\n            {state === \"search\" ? <ButtonFind userId={userId} inputFormId={inputFormId} doc={doc} /> : null}\n            {doc.id && state !== 'edit' ? <ButtonEdit userId={userId} inputFormId={inputFormId} doc={doc} /> : null}\n            {state === 'edit' ? <ButtonSave userId={userId} inputFormId={inputFormId} doc={doc} /> : null}\n            {state === 'edit' || state === 'search' ? <ButtonCancel userId={userId} inputFormId={inputFormId} doc={doc} /> : null}\n            {doc.id && state !== 'edit' ? <ButtonDelete userId={userId} inputFormId={inputFormId} doc={doc} /> : null}\n        </div>;\n}\n_c = Buttons;\nvar _c;\n$RefreshReg$(_c, \"Buttons\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/dlg_find_result.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/dlg_find_result.tsx\");\n  import.meta.hot.lastModified = \"1709721343144.2053\";\n}\n// REMIX HMR END\n\nimport MaterialTailwind from \"@material-tailwind/react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nconst {\n  Dialog,\n  Card,\n  CardBody,\n  CardFooter\n} = MaterialTailwind;\nexport default function DialogFindResult({\n  open,\n  setOpen,\n  docs\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const handleOpenInputForm = () => {\n    setOpen(false);\n    if (docs && docs.ids?.length) {\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[0]}`);\n    } else {\n      navigate(`/dashboard/enter_data/${docs.formId}?state=search`);\n    }\n  };\n  return <Dialog placeholder=\"\" size=\"sm\" open={open} handler={() => handleOpenInputForm()} className=\"bg-transparent shadow-none\">\n            <Card className=\"mx-auto w-full\" placeholder=\"\">\n                <CardBody className=\"flex flex-col gap-4 overflow-auto\" placeholder=\"\">\n                    {docs && docs.ids?.length ? <div className=\"text-bold p-1\">{t('find_result')}: {docs.ids?.length}</div> : <div className=\"text-bold p-1\">{t('nothing')}</div>}\n\n                </CardBody>\n                <CardFooter className=\"pt-0 flex flex-row gap-3 justify-center\" placeholder=\"\">\n                    <CustomButton className=\"bg-green-500 hover:shadow-green-100\" onClick={() => handleOpenInputForm()}>\n                        OK\n                    </CustomButton>\n                </CardFooter>\n            </Card>\n        </Dialog>;\n}\n_s(DialogFindResult, \"1n6r5eWNKhP/dvqdbLCphpT4ddM=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = DialogFindResult;\nvar _c;\n$RefreshReg$(_c, \"DialogFindResult\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/rec_navigator.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/rec_navigator.tsx\");\n  import.meta.hot.lastModified = \"1708944139413.0334\";\n}\n// REMIX HMR END\n\nimport { useNavigate } from \"@remix-run/react\";\nimport { useState } from \"react\";\nexport default function RecNavigator({\n  docs,\n  current,\n  setCurrent\n}) {\n  _s();\n  const [val, setVal] = useState(current);\n  const navigate = useNavigate();\n  const handleFirst = () => {\n    setVal(0);\n    setCurrent(0);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[0]}`);\n  };\n  const handlePrev = () => {\n    if (current > 0) {\n      --current;\n      setVal(current);\n      setCurrent(current);\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[current]}`);\n    }\n  };\n  const handleNext = () => {\n    const lastIndex = docs.ids.length - 1;\n    if (current < lastIndex) {\n      ++current;\n      setVal(current);\n      setCurrent(current);\n      navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[current]}`);\n    }\n  };\n  const handleLast = () => {\n    const lastIndex = docs.ids.length - 1;\n    setVal(lastIndex);\n    setCurrent(lastIndex);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[lastIndex]}`);\n  };\n  const handleSeek = val => {\n    if (val < 0) {\n      val = 0;\n    }\n    if (val > docs.ids.length - 1) {\n      val = docs.ids.length - 1;\n    }\n    setVal(val);\n    setCurrent(val);\n    navigate(`/dashboard/enter_data/${docs.formId}?docId=${docs.ids[val]}`);\n  };\n  return <div>\n            {docs && docs.ids ? <div className=\"flex gap-1 justify-end items-center text-xs\">\n                    <p className=\"text-blue-gray-600 font-bold\">\n                        {current + 1} / {docs.ids.length}\n                    </p>\n                    <input className=\"p-1 text-blue-gray-600 focus:outline-0 w-20\" type=\"number\" max={docs.ids.length} min={1} value={val + 1} onChange={e => setVal(Number(e.target.value) - 1)} />\n                    <button className=\"w-20 text-center border bg-blue-gray-500 p-1 font-bold text-white rounded\" onClick={() => handleSeek(val)}>\n                        Seek\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleFirst()}>\n                        &lt;&lt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handlePrev()}>\n                        &lt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleNext()}>\n                        &gt;\n                    </button>\n                    <button className=\"w-8 text-center border bg-orange-700 p-1 font-bold text-white rounded\" onClick={() => handleLast()}>\n                        &gt;&gt;\n                    </button>\n                </div> : null}\n        </div>;\n}\n_s(RecNavigator, \"bRS7YemhOiQ/UMD2eufTNCWGMz4=\", false, function () {\n  return [useNavigate];\n});\n_c = RecNavigator;\nvar _c;\n$RefreshReg$(_c, \"RecNavigator\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/edit_form/field.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/edit_form/field.tsx\");\n  import.meta.hot.lastModified = \"1710321139422.6836\";\n}\n// REMIX HMR END\n\nimport CustomInput from \"~/components/UI/elements/custom_input\";\nimport CustomSelect from \"~/components/UI/elements/custom_select\";\nimport { useTranslation } from \"react-i18next\";\nexport default function Field({\n  state,\n  dictionaries,\n  doc,\n  setDoc,\n  recordIndex,\n  fld\n}) {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const tableName = `tbl_${fld.groupId}`;\n  const fieldName = `f${fld.id}`;\n  let val = doc[tableName][recordIndex][fieldName] ? doc[tableName][recordIndex][fieldName] : '';\n  const cls = `col-span-${fld.colSpan} col-start-${fld.colStart}`;\n  const handleChange = e => {\n    let d = {\n      ...doc\n    };\n    d[tableName][recordIndex][fieldName] = e.target.value;\n    setDoc(d);\n  };\n  let fieldTitle = fld[`title_${i18n.language}`];\n  switch (fld.fieldType) {\n    case \"TEXT\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"text\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"CYRILLIC\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"text\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"INTEGER\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"number\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"NUMERIC\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"number\" step=\"0.01\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"DICT\":\n      const dic = dictionaries.find(item => item.id === fld.dicId);\n      return <CustomSelect key={fld.id} className={cls} id={fieldName} title={fieldTitle} name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))}>\n                    <option>-</option>\n                    {['create', 'edit', 'search', 'find'].includes(String(state)) ? dic?.data_edit.map(item => <option key={item.id} value={item.id}>{item[`title_${i18n.language}`]}</option>) : dic?.data_browse.map(item => <option key={item.id} value={item.id}>{item[`title_${i18n.language}`]}</option>)}\n                </CustomSelect>;\n    case \"DATE\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"date\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    case \"TIME\":\n      return <CustomInput key={fld.id} className={cls} id={fieldName} title={fieldTitle} type=\"time\" name={fieldName} value={val} onChange={handleChange} required={fld.isRequire && state === 'edit'} disabled={!fld.isEnable || !['create', 'edit', 'search', 'find'].includes(String(state))} size={fld.len ? fld.len : 30} maxLength={fld.len ? fld.len : 30} />;\n    // case \"FILE\":\n    //     return (\n    //         <CustomInput\n    //             key={fld.id}\n    //             className={cls}\n    //             id={fieldName}\n    //             title={fld.title}\n    //             type=\"file\"\n    //             name={fieldName}\n    //             defaultValue={defVal}\n    //             required={fld.isRequire && state === 'edit'}\n    //             disabled={!fld.isEnable || !(['create', 'edit', 'search', 'find'].includes(String(state)))}\n    //             size={fld.len ? fld.len : 30}\n    //             maxLength={fld.len ? fld.len : 30}\n    //         />\n    //     )\n  }\n}\n_s(Field, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n_c = Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/edit_form/single_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/edit_form/single_group.tsx\");\n  import.meta.hot.lastModified = \"1710320857095.1306\";\n}\n// REMIX HMR END\n\nimport Field from \"./field\";\nexport default function SingleGroup({\n  state,\n  dictionaries,\n  group,\n  doc,\n  setDoc\n}) {\n  return <div className=\"border p-1 grid grid-cols-3 gap-1\">\n            {group?.fields && group.fields.map(fld => <Field key={fld.id} state={state} dictionaries={dictionaries} recordIndex={0} doc={doc} setDoc={setDoc} fld={fld} />)}\n        </div>;\n}\n_c = SingleGroup;\nvar _c;\n$RefreshReg$(_c, \"SingleGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/edit_form/multy_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/edit_form/multy_group.tsx\");\n  import.meta.hot.lastModified = \"1710321757945.2395\";\n}\n// REMIX HMR END\n\nimport CustomButton from \"~/components/UI/elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"@remix-run/react\";\nexport default function MultyGroup({\n  state,\n  dictionaries,\n  group,\n  doc,\n  setDoc\n}) {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const handleDelete = (e, recordIndex) => {\n    e.preventDefault();\n    const response = confirm(\"Please confirm you want to delete this record.\");\n    if (response) {\n      let d = {\n        ...doc\n      };\n      const tbl = `tbl_${group.id}`;\n      d[tbl].splice([recordIndex], 1);\n      setDoc(d);\n    }\n  };\n  return <div className=\"border p-1 flex flex-col gap-3\">\n            <div className=\"mt-2\">\n                {state === 'edit' ? <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" onClick={() => navigate(`/dashboard/enter_data/${doc.formId}?state=edit&groupId=${group.id}`)}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n                        </svg>\n                        {t('add')}\n                    </CustomButton> : null}\n            </div>\n            <table className=\"border border-blue-gray-700\">\n                <thead className=\"bg-primary text-white text-center\">\n                    <tr>\n                        <th className=\"p-1 text-sm border border-blue-gray-700\">#</th>\n                        {group?.fields && group.fields.map(fld => <th key={fld.id} className=\"p-1 text-sm border border-blue-gray-700\">\n                                {fld[`title_${i18n.language}`]}\n                            </th>)}\n                        <th className=\"p-1 text-sm border border-blue-gray-700\">#</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {doc[`tbl_${group.id}`].map((record, index) => <tr key={index}>\n                            <td className=\"p-1 text-sm border border-blue-gray-700\">{index + 1}</td>\n                            {group?.fields && group.fields.map(fld => {\n            let val = doc[`tbl_${group.id}`][index][`fld_${fld.id}`];\n            return <th key={fld.id} className=\"p-1 text-sm border border-blue-gray-700\">\n                                        {val}\n                                    </th>;\n          })}\n                            <td className=\"p-1 text-sm border border-blue-gray-700\">{record.value}</td>\n                            {state === \"edit\" && index !== 0 ? <td className=\"p-1 text-sm border border-blue-gray-700\">\n                                    <CustomButton className=\"bg-red-500 hover:shadow-red-100\" onClick={e => handleDelete(e, index)}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" />\n                                        </svg>\n                                        Delete\n                                    </CustomButton>\n                                </td> : null}\n                        </tr>)}\n\n                </tbody>\n            </table>\n        </div>;\n}\n_s(MultyGroup, \"snclS1U3LXStivP937A7v9MkjWg=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = MultyGroup;\nvar _c;\n$RefreshReg$(_c, \"MultyGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/edit_form/edit_form.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/edit_form/edit_form.tsx\");\n  import.meta.hot.lastModified = \"1710248857617.1013\";\n}\n// REMIX HMR END\n\nimport { Form, useLocation } from \"@remix-run/react\";\nimport SingleGroup from \"./single_group\";\nimport MultyGroup from \"./multy_group\";\nimport { useTranslation } from \"react-i18next\";\nexport default function EditForm({\n  formRef,\n  userId,\n  inputForm,\n  state,\n  dictionaries,\n  doc,\n  setDoc\n}) {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  return <Form key={location.key} id=\"documentForm\" method=\"post\" ref={formRef}>\n            <input type=\"hidden\" name=\"_user\" value={userId} />\n            <input type=\"hidden\" name=\"_inputFormId\" value={inputForm.id} />\n            <input type=\"hidden\" name=\"_id\" value={doc.id ? doc.id : ''} />\n            {inputForm?.groups && inputForm.groups.map(group => {\n      let groupTitle = group[`title_${i18n.language}`];\n      return <div key={group.id} className=\"mb-2\">\n                        <h2 className=\"col-span-3 bg-primary text-white font-bold text-sm p-1 pl-4\">\n                            {groupTitle}\n                        </h2>\n                        {!group.isMulty ? <SingleGroup state={state} dictionaries={dictionaries} group={group} doc={doc} setDoc={setDoc} /> : <MultyGroup state={state} dictionaries={dictionaries} group={group} doc={doc} setDoc={setDoc} />}\n                    </div>;\n    })}\n        </Form>;\n}\n_s(EditForm, \"pvEfeCHADri5eKAKZTRJm3p+www=\", false, function () {\n  return [useTranslation, useLocation];\n});\n_c = EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/UI/widgets/enter_data/dlg_multy_group.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/UI/widgets/enter_data/dlg_multy_group.tsx\");\n  import.meta.hot.lastModified = \"1710333969062.1968\";\n}\n// REMIX HMR END\n\nimport MaterialTailwind from \"@material-tailwind/react\";\nimport Field from \"./edit_form/field\";\nimport CustomButton from \"../../elements/custom_button\";\nimport { useTranslation } from \"react-i18next\";\nconst {\n  Dialog,\n  Card,\n  CardBody,\n  CardFooter\n} = MaterialTailwind;\nexport default function DialogMultyGroup({\n  isNew,\n  state,\n  open,\n  setOpen,\n  group,\n  dictionaries,\n  doc,\n  setDoc\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const handleSave = () => {};\n  return <Dialog placeholder=\"\" size=\"lg\" open={open} handler={() => setOpen(false)} className=\"bg-transparent shadow-none\">\n            <Card className=\"mx-auto w-full\" placeholder=\"\">\n                <CardBody className=\"flex flex-col gap-4 overflow-auto\" placeholder=\"\">\n                    {group?.fields ? group.fields.map(fld => <Field key={fld.id} state={state} dictionaries={dictionaries} recordIndex={0} doc={doc} setDoc={setDoc} fld={fld} />) : <>-</>}\n                </CardBody>\n                <CardFooter className=\"pt-0 flex flex-row gap-3 justify-center\" placeholder=\"\">\n                    <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" form=\"userForm\" type=\"submit\" name=\"_action\" onClick={() => handleSave()}>\n                        {t('save')}\n                    </CustomButton>\n                    <CustomButton className=\"bg-primary hover:shadow-primary_shadow\" onClick={() => setOpen(false)}>\n                        {t('close')}\n                    </CustomButton>\n                </CardFooter>\n            </Card>\n        </Dialog>;\n}\n_s(DialogMultyGroup, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = DialogMultyGroup;\nvar _c;\n$RefreshReg$(_c, \"DialogMultyGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_react", "import_jsx_dev_runtime", "_s", "MaterialTailwind", "_c", "import_react", "import_jsx_dev_runtime", "_s", "val", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_s", "Dialog", "Card", "CardBody", "CardFooter", "MaterialTailwind", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_s", "document", "_c"]
}
